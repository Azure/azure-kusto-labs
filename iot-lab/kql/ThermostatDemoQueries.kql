#connect cluster('igniteadxsource.eastus2').database('Occupancy')


.create-or-alter function  ExtractThermostatData {
StageIoTRawData
| where EventType has 'Thermostat' and Body has 'temp'
| project 
EnqueuedTimeUtc,
SubEventType,  
DeviceID,
BatteryLevel = tolong(Body.['BatteryLevel']), 
Temp =  toreal(Body.['temp']),
Humidity =  toreal(Body.['humidity'])
}



Thermostats
| sample 10

//Sample Rows
Thermostats
| count


//What is the average temp every 1 min?
Thermostats
| where EnqueuedTimeUTC > ago(7d)
| where DeviceId == '637086755190714287'
| summarize avg(Temp) by bin(EnqueuedTimeUTC,1m)
| render timechart 


//Is there any missing data? 
//make-series
//Create series of specified aggregated values along specified axis.
Thermostats
| where EnqueuedTimeUTC > ago(6h)
| where DeviceId == '637086755190714287'
| make-series AvgTemp=avg(Temp) on EnqueuedTimeUTC from ago(6h) to now() step 1m   
| render timechart 

//How can I fill the missing values?
//series_fill_linear()
//Performs linear interpolation of missing values in a series.
Thermostats
| where EnqueuedTimeUTC > ago(6h)
| where DeviceId == '637086755190714287'
| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(6h) to now() step 1m   
| extend NoGapsTemp=series_fill_linear(AvgTemp)
| project EnqueuedTimeUTC, NoGapsTemp
| render timechart 



//What will be the temprature for next one hour?
Thermostats
| where EnqueuedTimeUTC > ago(2d)
| where DeviceId == '637086755190714287'
| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(2d) to now()+15m step 1m   
| extend NoGapsTemp=series_fill_linear(AvgTemp)
| project EnqueuedTimeUTC, NoGapsTemp
| extend forecast = series_decompose_forecast(NoGapsTemp, 15)
| render timechart with(title='Forecasting the next 15min by Time Series Decmposition')


//Are there any anomalies for this device?
Thermostats
| where EnqueuedTimeUTC > ago(3d)
| where DeviceId == '637086755190714287'
| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(3d) to now() step 1m   
| extend NoGapsTemp=series_fill_linear(AvgTemp)
| project EnqueuedTimeUTC, NoGapsTemp
| extend anomalies = series_decompose_anomalies(NoGapsTemp,1) 
| render anomalychart with(anomalycolumns=anomalies)


//What the anomalies I shoudl focus on across all devices?
Thermostats
| where EnqueuedTimeUTC > ago(3d)
| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(3d) to now() step 1m by DeviceId
| extend NoGapsTemp=series_fill_linear(AvgTemp)
| project EnqueuedTimeUTC, DeviceId, NoGapsTemp
| extend anomalies = series_decompose_anomalies(NoGapsTemp, 1)
| mv-expand EnqueuedTimeUTC, anomalies, NoGapsTemp
| where anomalies == 1

//.show materialized-views

//Materialized views
Hourly_Average_Mview
| where EnqueuedTimeUTC > ago(1h)
| take 1000 

Current_Mview

external_table("ext_Thermostats")
| where EnqueuedTimeUTC between (datetime('03-01-2020 11:00 am') .. datetime('03-01-2020 01:00 pm')) and DeviceId == '637086754472373714'
| project EnqueuedTimeUTC, BatteryLevel, Temp, Humidity


